
command_timeout = 1000

"$schema" = 'https://starship.rs/config-schema.json'

add_newline = false 

format = """
╭─ $os $directory$python${custom.giturl}$git_branch$git_state$git_status$direnv$line_break$fill$time
\
╰─$character
"""

[directory]
style = "bold bg:none fg:#1aa3ff"
format = "[   $path ]($style)"

[time]
disabled = false
time_format = "%T"
# style = "bg:peach"
format = '🕙 [ $time ]($style) '

[fill]
symbol = " "

[os]
disabled = false
style = "bg:none fg:#004d99"

[direnv]
disabled = false
symbol = " "
allowed_msg = ""
loaded_msg = ""
format = '[$symbol($style)]($style)'

[os.symbols]
Windows = "󰍲"
Ubuntu = "󰕈"
SUSE = ""
Raspbian = "󰐿"
Mint = "󰣭"
Macos = " "
Manjaro = ""
Linux = "󰌽"
Gentoo = "󰣨"
Fedora = "󰣛"
Alpine = ""
Amazon = ""
Android = ""
Arch = "󰣇"
Artix = "󰣇"
CentOS = ""
Debian = "󰣚"
Redhat = "󱄛"
RedHatEnterprise = "󱄛"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = "󰝚 "
"Pictures" = " "
"Developer" = "󰲋 "

[custom.giturl]
style = 'bold fg:#9381ff'
# disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=""
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'

[git_branch]
style = "fg:#ff6700"
format =  ' [$symbol$branch]($style)'

[git_status]
format = ' [($all_status$ahead_behind )]($style)'
conflicted = '🏳$count '
ahead = '[ ](white) [$count](red) '
behind = '[ ](white)[$count](green) '
diverged = '😵'
up_to_date = '✓$count '
untracked = '🤷 $count '
stashed = '📦$count '
modified = '[📝](white)[$count ](red)'
staged = '[++$count ](green)'
renamed = '👅 $count '
deleted = '🗑 $count '

[nodejs]
symbol = ""
format = '[ $symbol( $version) ]($style)'

[c]
symbol = " "
format = '[[ $symbol( $version) ]]($style)'

# [cpp]
# symbol = " "
# format = '[ $symbol( $version) ]($style)'

[rust]
symbol = ""
format = '[[ $symbol( $version) ]]($style)'

[golang]
symbol = ""
format = '[ $symbol( $version) ]($style)'
detect_files = ["go.mod"]

[php]
symbol = ""
format = '[[ $symbol( $version) ]]($style)'

[java]
symbol = " "
format = '[[ $symbol( $version) ]]($style)'

[kotlin]
symbol = ""
format = '[[ $symbol( $version) ]]($style)'

[haskell]
symbol = ""
format = '[[ $symbol( $version) ]]($style)'

[python]
symbol = ""
style = 'fg:#00ff00'
format = '[$symbol($version) $virtualenv ]($style)'
pyenv_version_name = true

[docker_context]
symbol = ""
format = '[ $symbol( $context) ]($style)'

[line_break]
disabled = true 
